version: '3.4'

services:
  
  catalogdb:
    container_name: catalogdb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db 
  
  basketdb:
    container_name: basketdb
    restart: always
    ports:
      - "6379:6379"

  orderdb:
    container_name: orderdb
    environment:
      SA_PASSWORD: "0rd&rDB123456"
      ACCEPT_EULA: "Y"
    restart: always
    ports:
      - "1433:1433"
  
  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"

  portainer:
    container_name: portainer
    restart: always
    ports:
      - "8080:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  catalog.api:
    container_name: catalog.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=mongodb://catalogdb:27017"
    depends_on:
      - catalogdb
    ports:
      - "8000:80"

  basket.api:
    container_name: basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "CacheSettings:ConnectionString=basketdb:6379"
    depends_on:
      - basketdb
    ports:
      - "8001:80"


  ordering.api:
    container_name: ordering.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:OrderingDB=Server=orderdb;Database=OrderDb;Integrated Security=SSPI;Trusted_Connection=False;User ID=sa;Password=0rd&rDB123456;MultipleActiveResultSets=True"
    ports:
      - "8004:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
